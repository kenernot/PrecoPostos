unit uDM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef, FireDAC.Stan.ExprFuncs, FireDAC.FMXUI.Wait, Data.DB,
  FireDAC.Comp.Client, System.IOUtils;

type
  TDM = class(TDataModule)
    FDConnection1: TFDConnection;
    FDPhysSQLiteDriverLink1: TFDPhysSQLiteDriverLink;
    procedure DataModuleCreate(Sender: TObject);
    procedure FDConnection1BeforeConnect(Sender: TObject);
    procedure FDConnection1AfterConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DM: TDM;

implementation

{%CLASSGROUP 'FMX.Controls.TControl'}
{$R *.dfm}

procedure TDM.DataModuleCreate(Sender: TObject);
begin
  FDConnection1.Connected := true;
end;

procedure TDM.FDConnection1AfterConnect(Sender: TObject);
var
  strSQL: String;
begin
  strSQL := //
    'CREATE TABLE IF NOT EXISTS usuario(' + //
    '       idUsuario INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,' + //
    '       nome VARCHAR(30),' + //
    '       cpf VARCHAR(11),' + //
    '       usuario VARCHAR(15),' + //
    '       telefone VARCHAR(11),' + //
    '       email VARCHAR(40),' + //
    '       senha VARCHAR(65)' + //
    ');';
  FDConnection1.ExecSQL(strSQL);

  strSQL := EmptyStr;
  strSQL := //
    'CREATE TABLE IF NOT EXISTS bandeiraPosto(' + //
    '       idBandeiraPosto INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,' + //
    '       descricao VARCHAR(40)' + //
    ');';
  FDConnection1.ExecSQL(strSQL);

  strSQL := EmptyStr;

  strSQL := //
    'CREATE TABLE IF NOT EXISTS bandeira(' + //
    '       idBandeira INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,' + //
    '       latitude VARCHAR(17),' + //
    '       longitude VARCHAR(17)' + //
    ');';
  FDConnection1.ExecSQL(strSQL);

  strSQL := EmptyStr;

  strSQL := //
    'CREATE TABLE IF NOT EXISTS posto(' + //
    '       idPosto INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,' + //
    '       idBandeira INTEGER,' + //
    '       nome VARCHAR(50),' + //
    '       enderco VARCHAR(50),' + //
    '       telefone VARCHAR(11),' + //
    '       FOREIGN KEY (idBandeira) REFERENCES bandeira(idBandeira)' + //
    ');';
  FDConnection1.ExecSQL(strSQL);

  strSQL := EmptyStr;

  strSQL := //
    'CREATE TABLE IF NOT EXISTS combustivel(' + //
    '       idCombustivel INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,' + //
    '       descricao VARCHAR(45)' + //
    ');';
  FDConnection1.ExecSQL(strSQL);

  strSQL := EmptyStr;

  strSQL := //
    'CREATE TABLE IF NOT EXISTS precoPosto(' + //
    '       idPrecoPosto INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,' + //
    '       idPosto INTEGER,' + //
    '       idCombustivel INTEGER,' + //
    '       data DATE,' + //
    '       fotoPlaca BLOB,' + //
    '       valor DECIMAL(8,2),' + //
    '       FOREIGN KEY (idPosto) REFERENCES posto(idPosto),' + //
    '       FOREIGN KEY (idCombustivel) REFERENCES combustivel(idCombustivel)' +
  //
    ');';
  FDConnection1.ExecSQL(strSQL);

  strSQL := EmptyStr;

end;

procedure TDM.FDConnection1BeforeConnect(Sender: TObject);
var
  strPath: String;
begin
{$IFDEF MSWINDOWS}
  strPath := System.IOUtils.TPath.Combine
    ('C:\Aulas Faculdade\3_ANO\MOBILE\ConsultaPrecosPostos\db',
    'precoposto.db');
{$ENDIF}
{$IF DEFINED(iOS) or DEFINED(ANDROID)}
  strPath := System.IOUtils.TPath.Combine(System.IOUtils.TPath.GetDocumentsPath,
    'precoposto.db');
{$ENDIF}
  FDConnection1.Params.Values['DATABASE'] := strPath;
end;

end.
